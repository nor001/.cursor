# AI CONFIGURATION - STRUCTURED DATA FOR AI ASSISTANCE
# This file complements the markdown rules with structured, parseable data
# For detailed explanations, see the corresponding .md files

ai_framework:
  version: "1.0"
  description: "AI-friendly development configuration for SAP/ABAP projects"
  base_rule: "universal-rule.md"
  rule_files:
    - "ai-documentation-rule.md"
    - "ai-naming-rule.md"
    - "ai-error-handling-rule.md"
    - "ai-integration-rule.md"
    - "script-rule.md"
    - "abap-rule.md"

# AI Documentation Standards - Structured Templates
documentation:
  templates:
    component:
      required_tags:
        - ai-context
        - ai-cognitive-load
      optional_tags:
        - ai-purpose
        - ai-data-expects
        - ai-business-context
        - ai-special-cases
        - ai-focus-state
        - ai-session-type
        - ai-performance-notes
        - ai-error-handling
    
    function:
      required_tags:
        - ai-function
        - ai-params
        - ai-returns
      optional_tags:
        - ai-business-rules
        - ai-special-cases
        - ai-performance-impact
    
    api_endpoint:
      required_tags:
        - ai-context
        - ai-purpose
        - ai-data-expects
      optional_tags:
        - ai-business-context
        - ai-special-cases
        - ai-error-handling
        - ai-security-notes

  cognitive_load_levels:
    low: "Simple, straightforward logic"
    medium: "Moderate complexity, multiple states"
    high: "Complex logic, many edge cases"

  focus_states:
    clear: "Well-defined, predictable logic"
    fuzzy: "Ambiguous or unclear logic"
    scattered: "Multiple concerns, complex flow"

  session_types:
    standard: "Routine operation"
    complex: "Complex task requiring attention"
    crisis: "Critical issue requiring immediate action"

# AI Naming Conventions - Pattern Definitions
naming:
  domains:
    sap:
      functions:
        - pattern: "handleSAP{Action}"
        - pattern: "validateSAP{DataType}"
        - pattern: "processSAP{Operation}"
        - pattern: "calculateSAP{Metric}"
      variables:
        - pattern: "sap{Entity}Data"
        - pattern: "sap{Entity}List"
        - pattern: "sap{Entity}Config"
        - pattern: "sap{Entity}State"
    
    abap:
      functions:
        - pattern: "handleABAP{Action}"
        - pattern: "validateABAP{DataType}"
        - pattern: "processABAP{Operation}"
      variables:
        - pattern: "abap{Entity}List"
        - pattern: "abap{Entity}Config"
        - pattern: "abap{Entity}State"
    
    ui:
      functions:
        - pattern: "handle{Component}{Action}"
        - pattern: "update{Component}{State}"
        - pattern: "render{Component}{View}"
      variables:
        - pattern: "{component}State"
        - pattern: "{component}Config"
        - pattern: "{component}Data"

  error_classes:
    business:
      - "SAPBusinessError"
      - "ABAPBusinessError"
    validation:
      - "SAPValidationError"
      - "ABAPValidationError"
    system:
      - "SAPSystemError"
      - "ABAPSystemError"
    security:
      - "SAPSecurityError"
      - "ABAPSecurityError"

# AI Error Handling Patterns - Configuration
error_handling:
  error_types:
    business:
      template: "Domain Business Error [{errorCode}]: {message}"
      context_fields:
        - errorCode
        - businessContext
    
    validation:
      template: "Domain Validation Error [{field}]: {message}"
      context_fields:
        - field
        - value
        - expectedFormat
    
    system:
      template: "Domain System Error [{operation}]: {message}"
      context_fields:
        - operation
        - systemContext
    
    security:
      template: "Domain Security Error: {message}"
      context_fields:
        - securityContext

  recovery_strategies:
    graceful_degradation:
      - primary_operation
      - basic_validation
      - partial_results
    
    retry_mechanism:
      max_retries: 3
      base_delay: 1000
      exponential_backoff: true

# AI Integration Framework - Layer Configuration
integration:
  layers:
    operational:
      description: "80% of time - Daily efficiency + security-first"
      ai_rules: ["basic_documentation", "naming", "basic_error_handling"]
      complexity_threshold: "low"
      time_available: "<30min"
      cognitive_load: "low"
    
    strategic:
      description: "15% of time - Complex architecture + advanced AI orchestration"
      ai_rules: ["all"]
      complexity_threshold: "high"
      time_available: ">2h"
      cognitive_load: "high"
    
    fallback:
      description: "5% of time - Emergency simplicity + proven reliability"
      ai_rules: ["basic_naming", "minimal_documentation"]
      complexity_threshold: "emergency"
      time_available: "immediate"
      cognitive_load: "low"

  triggers:
    emergency:
      - cognitive_state: "low"
      - risk_level: "critical"
      - ai_readiness: "manual"
    
    strategic:
      - complexity: "architectural"
      - time_available: ">2h"
      - cognitive_state: "high"
    
    operational:
      - complexity: "simple"
      - time_available: "<30min"
      - cognitive_state: "medium"

# Domain-Specific Patterns - Configuration
domains:
  sap:
    special_cases:
      - csv_headers_line_3: "CSV headers on line 3"
      - corporate_ssl: "Corporate SSL requirements"
      - legacy_formats: "Legacy CSV formats"
      - encoding_issues: "Character encoding variations"
    
    business_rules:
      - project_timeline_overlap: "Prevent timeline overlaps"
      - resource_assignment: "Validate resource availability"
      - date_validation: "SAP date format validation"
    
    security_requirements:
      - file_type_validation: "Validate CSV file types"
      - size_limits: "File size restrictions"
      - corporate_policies: "Corporate security policies"

  abap:
    naming_conventions:
      - prefix: "Z" # Custom developments
      - prefix: "Y" # Customer developments
      - prefix: "X" # Extended standard
    
    special_patterns:
      - table_naming: "Z{Module}_{Entity}"
      - program_naming: "Z{Module}_{Function}"
      - function_naming: "Z_{Module}_{Function}"

# Performance Considerations - Limits and Optimization
performance:
  ai_optimization:
    max_tokens_per_request: 4000
    preferred_format: "structured"
    context_preservation: true
  
  documentation_limits:
    max_tags_per_component: 8
    max_context_length: 200
    progressive_documentation: true

# Success Metrics - Measurement Criteria
metrics:
  ai_understanding:
    - context_recognition: "AI correctly identifies component purpose"
    - special_case_handling: "AI preserves critical business logic"
    - performance_awareness: "AI considers performance implications"
    - security_compliance: "AI maintains security standards"
  
  human_developer:
    - readability: "Code remains readable for human developers"
    - maintainability: "Easy to modify and extend"
    - onboarding: "New developers understand quickly"
    - debugging: "Issues are easy to identify and resolve"

# Implementation Guidelines - Decision Matrix
implementation:
  when_to_use_ai_documentation:
    - "Complex business logic that's not obvious"
    - "Special cases and edge case handling"
    - "Performance-critical components"
    - "Security-sensitive operations"
    - "Integration points with external systems"
  
  when_not_to_use_ai_documentation:
    - "Simple utility functions with obvious purpose"
    - "Standard patterns that are well understood"
    - "Basic CRUD operations without special logic"
    - "Self-explanatory code with clear naming"
  
  documentation_priority:
    - "Business Logic - Document complex business rules"
    - "Special Cases - Document edge cases and exceptions"
    - "Performance - Document performance considerations"
    - "Security - Document security implications"
    - "Integration - Document external system interactions" 